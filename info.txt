- Finding papers / models for houes prediction using NN
- Trying to build a model using keras.
- Perhaps it is better to start without selu and then add selu after we have predictions working

Added more features, learning stopped.. Need to investigate

Bibliograhpy/references:
- Neural Network Based Model for Predicting Housing Market
Performance
Ahmed Khalafallah**
Department of Civil, Environmental, and Construction Engineering,
University of Central Florida, Orlando, FL 32816-2450, USA

- https://nataliarslan.com/otherprojects/2017/9/26/predicting-house-prices-in-stockholm-using-tensorflow

- A Neural Network based model for real estate price estimation
considering environmental quality of property location

House price prediction using neural networks

Adam , 6000 iteracji

Next Step:
 improve, Selu, other optimizers

# 10 epochs
melbourne_model = keras.models.Sequential()
melbourne_model.add(keras.layers.Dense(20, activation='tanh',input_dim=len(input_features)))
melbourne_model.add(keras.layers.Dense(20, activation='tanh'))
melbourne_model.add(keras.layers.Dense(1, activation='relu'))   # MAE: 922165

# 20 epochs
melbourne_model = keras.models.Sequential()
melbourne_model.add(keras.layers.Dense(20, activation='tanh',input_dim=len(input_features)))
melbourne_model.add(keras.layers.Dense(20, activation='tanh'))
melbourne_model.add(keras.layers.Dense(1, activation='relu'))   # MAE: 462209


# 30 epochs
melbourne_model = keras.models.Sequential()
melbourne_model.add(keras.layers.Dense(20, activation='tanh',input_dim=len(input_features)))
melbourne_model.add(keras.layers.Dense(20, activation='tanh'))
melbourne_model.add(keras.layers.Dense(1, activation='relu'))   # 'MAE:', 529127.20319561008

# 1000 epochs
melbourne_model = keras.models.Sequential()
melbourne_model.add(keras.layers.Dense(20, activation='tanh',input_dim=len(input_features)))
melbourne_model.add(keras.layers.Dense(20, activation='tanh'))
melbourne_model.add(keras.layers.Dense(1, activation='relu'))   # 'MAE:', 460326

# 100 epochs (Adam)

melbourne_model = keras.models.Sequential()
melbourne_model.add(keras.layers.Dense(20, activation='tanh',input_dim=len(input_features)))
melbourne_model.add(keras.layers.Dense(20, activation='tanh'))
melbourne_model.add(keras.layers.Dense(1, activation='relu'))   # 'MAE:', 1060400
===========================================
- reproducing : House price prediction : hedonic price model vs artificial neural network




==========================================================================================
 Relu
20 input neurons , 20 hidden , 1 final. All Relu activations 

    input_features = ['Address','Bathroom','Bedroom2','BuildingArea','Car','CouncilArea', 'Date', 'Distance', 'Landsize', 'Lattitude', 'Longtitude', 'Method', 'Postcode', 'Price', 'Propertycount', 'Regionname', 'Rooms', 'SellerG', 'Suburb', 'Type', 'YearBuilt']

Train : Val 80:20

Infer on best weights
('MAE:', 22.866146001452549)
loss: 1636.33
-------------------------------------------------------
20 input neurons , 20 hidden , 1 final. Tanh, tanh, relu
Poor convergence .. Adam optimizer

    input_features = ['Address','Bathroom','Bedroom2','BuildingArea','Car','CouncilArea', 'Date', 'Distance', 'Landsize', 'Lattitude', 'Longtitude', 'Method', 'Postcode', 'Price', 'Propertycount', 'Regionname', 'Rooms', 'SellerG', 'Suburb', 'Type', 'YearBuilt']

==================================================
SNN




Next Step:
1) make it working on train and test. and prepare for kaggle submission
2) reproduce results
3) How to make infer on test be automatically dumped into directory of training output?
4) Data is not complete. Drop data from 'Alley' collumn . Write an article chapter
5) Make some filling of data



==============================================
Data cleaning:

Car - number of car parking places. sometimes NAN. thesis is that if no paring spots then not always info is put. Also
value of zero among proper values is less common that non-zero values. so we replace NAN with 0.


Bathroom - number of Bathrooms. If NAN then I assume 1. If someone got more than it is more likely to underline that fact.

CoucilArea -- Tried to guess from adress, but was to bug prone sso decided to put unknown

Bedroom2 -- number of beedrooms. IT seems to be subset of Rooms. So I will remove that columns

Latitude/longtitude -- IT would be beneficial to have that one. But will be droped do to 20% of missing data. We could consider guessing based on address eg. find property on same street and same suburb etc. It would be difficult

Regionname -- will try to recreate one.. based on address, suburb. First I check from same suburb and returns REgionname if possible.
If not avaialbe properties from same suburb then I return first property from same street 

Price -- missing, then dropped data rows that got NAN in that column. Drop after other cleaning ops were made

Make buildingarea
